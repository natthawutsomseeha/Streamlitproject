import streamlit as st
import numpy as np
import joblib

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ò‡∏µ‡∏° ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
st.set_page_config(page_title="Cardiovascular Risk Assessment", page_icon="‚ù§Ô∏è", layout="centered")


st.markdown(
    """
    <style>
    .stApp {
        background-color: #FFFFFF;
    }
    </style>
    """,
    unsafe_allow_html=True
)

# ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ
st.markdown(
    """
    <h1 style='text-align: center; color: #2E8B57;'>Cardiovascular Disease Prediction</h1>
    <p style='text-align: center; color: #555;'>‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à</p>
    """, unsafe_allow_html=True
)

# ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö UI
col1, col2 = st.columns(2)

with col1:
    age = st.slider("üïí ‡∏≠‡∏≤‡∏¢‡∏∏ (‡∏õ‡∏µ)", 29, 64, 40)
    gender = st.radio("üöª ‡πÄ‡∏û‡∏®", ["‡∏ä‡∏≤‡∏¢", "‡∏´‡∏ç‡∏¥‡∏á"], horizontal=True)
    height = st.number_input("üìè ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á (cm)", min_value=100, max_value=250, value=170)
    weight = st.number_input("‚öñÔ∏è ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å (kg)", min_value=30, max_value=200, value=70)

with col2:
    ap_hi = st.number_input("ü©∏ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï Systolic", min_value=50, max_value=250, value=120)
    ap_lo = st.number_input("ü©∏ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï Diastolic", min_value=30, max_value=200, value=80)

    # ‡∏Ñ‡∏±‡πà‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏¢‡∏™‡∏°‡∏°‡∏≤‡∏ï‡∏£
    st.markdown("")

    cholesterol = st.selectbox("üß™ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏≠‡πÄ‡∏•‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡∏≠‡∏•", [1, 2, 3], format_func=lambda x: ["‡∏õ‡∏Å‡∏ï‡∏¥", "‡∏™‡∏π‡∏á", "‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å"][x-1])
    gluc = st.selectbox("üç¨ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î", [1, 2, 3], format_func=lambda x: ["‡∏õ‡∏Å‡∏ï‡∏¥", "‡∏™‡∏π‡∏á", "‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å"][x-1])

# ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Lifestyle
st.markdown("### üèÉ‚Äç‚ôÇÔ∏è ‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û")
col3, col4, col5 = st.columns(3)

with col3:
    smoke = st.checkbox("üö¨ ‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà")
with col4:
    alco = st.checkbox("üç∑ ‡∏î‡∏∑‡πà‡∏°‡πÅ‡∏≠‡∏•‡∏Å‡∏≠‡∏Æ‡∏≠‡∏•‡πå")
with col5:
    active = st.checkbox("üí™ ‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢")

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
gender = 1 if gender == "‡∏ä‡∏≤‡∏¢" else 2
smoke = int(smoke)
alco = int(alco)
active = int(active)
input_data = np.array([[age, gender, height, weight, ap_hi, ap_lo, cholesterol, gluc, smoke, alco, active]])

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡πÑ‡∏ß‡πâ
model = joblib.load("voting_classifier.pkl")

# ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
if st.button("üîç ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå", use_container_width=True):
    prediction = model.predict(input_data)[0]
    
    st.markdown("---")
    if prediction == 1:
        st.error("‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≠‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à ‡πÇ‡∏õ‡∏£‡∏î‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå")
    else:
        st.success("‚úÖ ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏î‡∏µ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≠‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à")
